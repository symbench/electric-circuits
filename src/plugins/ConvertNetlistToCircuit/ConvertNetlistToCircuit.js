/* globals define */
/* eslint-env node */

/**
 * Generated by PluginGenerator 2.20.5 from webgme on Thu Dec 17 2020 12:43:35 GMT-0600 (Central Standard Time).
 * A plugin that inherits from the PluginBase. To see source code documentation about available
 * properties and methods visit %host%/docs/source/PluginBase.html.
 */

define([
    'plugin/PluginConfig',
    'text!./metadata.json',
    'jszip',
    'electric-circuits/plugins/PythonPluginBase',
], function (
    PluginConfig,
    pluginMetadata,
    JSZip,
    PluginBase,
) {
    'use strict';

    pluginMetadata = JSON.parse(pluginMetadata);

    class ConvertNetlistToCircuit extends PluginBase {
        constructor() {
            super(pluginMetadata);
        }

        async main(callback) {
            await super.main(callback);
        }

        async getMetadata(metadataHash) {
            return (await this.blobClient.getMetadata(metadataHash));
        }

        async getZipFileContents(metadataHash) {
            const zipMetadata = await this.getMetadata(metadataHash);

            if(zipMetadata.mime !== 'application/zip') {
                throw new Error(`The object stored at ${metadataHash} is not a zip file`);
            }

            const zipFile = await this.blobClient.getObject(metadataHash);
            const zipLoader = new JSZip();
            const zip = await zipLoader.loadAsync(zipFile);
            let zipContents = {};

            for(let [name, entry] of Object.entries(zip.files)) {
                if(!entry.dir){
                    zipContents[name] = await entry.async('text');
                }
            }

            return zipContents;
        }
    }

    return ConvertNetlistToCircuit;
});
