#! /usr/bin/env python3
import argparse
import json
import os
from pathlib import Path
from typing import Union

from symbench.electric_circuits.parser import PySpiceParser


class PySpiceSaver:
    """A components saver for PySpice.

    This class uses PySpiceParser to generate
    schema for PySpice Elements.

    Parameters
    ----------
    out_dir : str or Path like, default=None
        The output directory to save the generated schemas in
    """

    def __init__(self, out_dir: Union[str, Path] = None) -> None:
        if out_dir is None:
            out_dir = "."
        self.out_dir = Path(out_dir).resolve()

        print(f"Schemas will be saved in {self.out_dir}")

        if not self.out_dir.exists():
            os.makedirs(self.out_dir)

        self.pyspice_parser = PySpiceParser()

    def parse_and_save(self) -> None:
        pyspice_elements = self.pyspice_parser.run()
        self.save_json(self.out_dir / "elements.json", pyspice_elements)

    @staticmethod
    def save_json(path: Path, content: dict) -> None:
        with open(path, "w") as json_file:
            json.dump(content, json_file, indent=2)


def main() -> None:
    out_dir = "./src/plugins/CreateElectricCircuitsMeta/PySpice"
    parser = argparse.ArgumentParser(description="")
    parser.add_argument(
        "--out-dir",
        help="The output directory to save the generated json",
        type=str,
        default=out_dir,
    )
    args = parser.parse_args()
    schema_saver = PySpiceSaver(args.out_dir)
    schema_saver.parse_and_save()


if __name__ == "__main__":
    main()
